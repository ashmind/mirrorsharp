<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <IsPackable>false</IsPackable>
    <AssemblyName>MirrorSharp.Tests.Roslyn45</AssemblyName>
    <RootNamespace>MirrorSharp.Tests</RootNamespace>
    <IsPackable>false</IsPackable>
    <NoWarn>VSTHRD200</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis" Version="4.5.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Features" Version="4.5.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Features" Version="4.5.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0" />
    <PackageReference Include="SourceMock" Version="0.10.0" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    <PackageReference Include="coverlet.collector" Version="1.0.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Common\Common.csproj" />
    <ProjectReference Include="..\FSharp\FSharp.csproj" />
    <ProjectReference Include="..\Testing\Testing.csproj" />
    <ProjectReference Include="..\VisualBasic\VisualBasic.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="../Tests/**/*.cs" Exclude="../Tests/obj/**; ../Tests/Php*.cs; ../Tests/FSharp*.cs" />
  </ItemGroup>

  <Target Name="CopySdkReferenceAssemblies" AfterTargets="ResolveReferences">
    <ItemGroup>
      <Content Include="@(Reference->'%(RootDir)%(Directory)%(Filename)%(Extension)')"
               Link="@(Reference->'ref-assemblies\%(Filename)%(Extension)')"
               Condition="$([System.String]::new('%(Filename)').StartsWith('System')) or '%(Filename)' == 'netstandard'">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <Content Include="@(Reference->'%(RootDir)%(Directory)%(Filename).xml')"
               Link="@(Reference->'ref-assemblies\%(Filename).xml')"
               Condition="($([System.String]::new('%(Filename)').StartsWith('System')) or '%(Filename)' == 'netstandard')
                          and Exists('%(RootDir)%(Directory)%(Filename).xml')">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>
</Project>