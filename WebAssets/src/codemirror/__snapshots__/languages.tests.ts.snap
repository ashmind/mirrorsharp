// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`C# highlighting applies expected classes 1`] = `"<div class="cm-line"><span class="tok-keyword">public</span> <span class="tok-keyword">class</span> C<span class="tok-punctuation">&lt;</span>T<span class="tok-punctuation">&gt;</span> <span class="tok-punctuation">{</span></div><div class="cm-line">    <span class="tok-comment">// test comment</span></div><div class="cm-line">    <span class="tok-keyword">public</span> <span class="tok-keyword">void</span> M<span class="tok-punctuation">&lt;</span>U<span class="tok-punctuation">&gt;</span><span class="tok-punctuation">(</span><span class="tok-punctuation">)</span> <span class="tok-punctuation">{</span></div><div class="cm-line">        <span class="tok-keyword">double</span> d <span class="tok-punctuation">=</span> <span class="tok-number">1.2e3</span><span class="tok-punctuation">;</span></div><div class="cm-line">        <span class="tok-keyword">string</span> s1 <span class="tok-punctuation">=</span> <span class="tok-string">"test"</span><span class="tok-punctuation">;</span></div><div class="cm-line">        <span class="tok-keyword">string</span> s2 <span class="tok-punctuation">=</span> $<span class="tok-string">"a{s1}b"</span><span class="tok-punctuation">;</span></div><div class="cm-line">        <span class="tok-keyword">char</span> c <span class="tok-punctuation">=</span> 't'<span class="tok-punctuation">;</span></div><div class="cm-line">        Action a <span class="tok-punctuation">=</span> <span class="tok-punctuation">(</span><span class="tok-punctuation">)</span> <span class="tok-punctuation">=&gt;</span> <span class="tok-punctuation">{</span><span class="tok-punctuation">}</span><span class="tok-punctuation">;</span></div><div class="cm-line">    <span class="tok-punctuation">}</span></div><div class="cm-line"><span class="tok-punctuation">}</span></div>"`;

exports[`F# highlighting applies expected classes 1`] = `"<div class="cm-line"><span class="tok-keyword">type</span> <span class="tok-variableName">C</span><span class="tok-operator">&lt;</span>'<span class="tok-variableName">a</span><span class="tok-operator">&gt;</span> <span class="tok-operator">=</span></div><div class="cm-line">    <span class="tok-comment">// test comment</span></div><div class="cm-line">    <span class="tok-keyword">member</span> <span class="tok-variableName">this</span><span class="tok-operator">.</span><span class="tok-variableName">M</span><span class="tok-operator">&lt;</span>'<span class="tok-variableName">b</span><span class="tok-operator">&gt;</span>() <span class="tok-operator">=</span></div><div class="cm-line">        <span class="tok-keyword">let</span> <span class="tok-variableName">d</span> <span class="tok-operator">=</span> <span class="tok-number">1.2e3</span></div><div class="cm-line">        <span class="tok-keyword">let</span> <span class="tok-variableName">s1</span> <span class="tok-operator">=</span> <span class="tok-string">"test"</span></div><div class="cm-line">        <span class="tok-keyword">let</span> <span class="tok-variableName">s2</span> <span class="tok-operator">=</span> $<span class="tok-string">"a{s1}b"</span></div><div class="cm-line">        <span class="tok-keyword">let</span> <span class="tok-variableName">c</span> <span class="tok-operator">=</span> '<span class="tok-variableName">t</span>'</div><div class="cm-line">        <span class="tok-keyword">let</span> <span class="tok-variableName">a</span> <span class="tok-operator">=</span> <span class="tok-keyword">fun</span> () <span class="tok-operator">-</span><span class="tok-operator">&gt;</span> ()</div><div class="cm-line">        ()</div>"`;

exports[`IL highlighting applies expected classes 1`] = `"<div class="cm-line"><span class="tok-keyword">.class</span> <span class="tok-keyword">public</span> C\`1&lt;T&gt;</div><div class="cm-line">    <span class="tok-keyword">extends</span> [System.Runtime]System.Object</div><div class="cm-line">{</div><div class="cm-line">    <span class="tok-comment">// test comment</span></div><div class="cm-line">    <span class="tok-keyword">.method</span> <span class="tok-keyword">public</span></div><div class="cm-line">        <span class="tok-keyword">instance</span> void M&lt;U&gt; () <span class="tok-keyword">cil</span> <span class="tok-keyword">managed</span></div><div class="cm-line">    {</div><div class="cm-line">        <span class="tok-keyword">.maxstack</span> <span class="tok-number">3</span></div><div class="cm-line">        <span class="tok-keyword">.locals</span> <span class="tok-keyword">init</span> (</div><div class="cm-line">            [0] float64 d,</div><div class="cm-line">            [1] string s1</div><div class="cm-line">        )</div><div class="cm-line"><br></div><div class="cm-line">        <span class="tok-typeName">IL_0000:</span> <span class="tok-variableName">ldc.r8</span> <span class="tok-number">1</span>.2e3</div><div class="cm-line">        <span class="tok-typeName">IL_0009:</span> <span class="tok-variableName">stloc.0</span></div><div class="cm-line">        <span class="tok-typeName">IL_000a:</span> <span class="tok-variableName">ldstr</span> <span class="tok-string">"test"</span></div><div class="cm-line">        <span class="tok-typeName">IL_000f:</span> <span class="tok-variableName">stloc.1</span></div><div class="cm-line">        <span class="tok-typeName">IL_0010:</span> <span class="tok-variableName">ret</span></div><div class="cm-line">    }</div><div class="cm-line">}</div>"`;

exports[`PHP highlighting applies expected classes 1`] = `"<div class="cm-line"><span class="tok-meta">&lt;?php</span></div><div class="cm-line"><br></div><div class="cm-line"><span class="tok-keyword">class</span> <span class="tok-className">C</span> <span class="tok-punctuation">{</span></div><div class="cm-line">    <span class="tok-comment">// test comment</span></div><div class="cm-line">    <span class="tok-keyword">public</span> <span class="tok-keyword">function</span> <span class="tok-variableName">M</span><span class="tok-punctuation">(</span><span class="tok-punctuation">)</span> <span class="tok-punctuation">{</span></div><div class="cm-line">        <span class="tok-variableName">$d</span> <span class="tok-operator">=</span> <span class="tok-number">1.2e3</span><span class="tok-punctuation">;</span></div><div class="cm-line">        <span class="tok-variableName">$s1</span> <span class="tok-operator">=</span> <span class="tok-string">'test'</span><span class="tok-punctuation">;</span></div><div class="cm-line">        <span class="tok-variableName">$s2</span> <span class="tok-operator">=</span> <span class="tok-string">"a</span><span class="tok-punctuation">{</span><span class="tok-variableName">$s1</span><span class="tok-punctuation">}</span><span class="tok-string">b"</span><span class="tok-punctuation">;</span></div><div class="cm-line">        <span class="tok-variableName">$a</span> <span class="tok-operator">=</span> <span class="tok-keyword">fn</span><span class="tok-punctuation">(</span><span class="tok-punctuation">)</span> <span class="tok-punctuation">=&gt;</span> <span class="tok-number">0</span><span class="tok-punctuation">;</span></div><div class="cm-line">    <span class="tok-punctuation">}</span></div><div class="cm-line"><span class="tok-punctuation">}</span></div>"`;

exports[`VB highlighting applies expected classes 1`] = `"<div class="cm-line"><span class="tok-keyword">Public</span> <span class="tok-keyword">Class</span> <span class="tok-variableName">C</span> (<span class="tok-keyword">Of</span> <span class="tok-variableName">T</span>)</div><div class="cm-line">    <span class="tok-comment">' test comment</span></div><div class="cm-line">    <span class="tok-keyword">Public</span> <span class="tok-keyword">Sub</span> <span class="tok-variableName">M</span> (<span class="tok-keyword">Of</span> <span class="tok-variableName">U</span>)()</div><div class="cm-line">        <span class="tok-keyword">Dim</span> <span class="tok-variableName">d</span> <span class="tok-keyword">As</span> <span class="tok-keyword">Decimal</span> = <span class="tok-number">1.2</span><span class="tok-variableName">e3</span></div><div class="cm-line">        <span class="tok-keyword">Dim</span> <span class="tok-variableName">s1</span> <span class="tok-keyword">As</span> <span class="tok-keyword">String</span> = <span class="tok-string">"test"</span></div><div class="cm-line">        <span class="tok-keyword">Dim</span> <span class="tok-variableName">s2</span> <span class="tok-keyword">As</span> <span class="tok-keyword">String</span> = <span class="tok-invalid">$</span><span class="tok-string">"a{s1}b"</span></div><div class="cm-line">        <span class="tok-keyword">Dim</span> <span class="tok-variableName">c</span> <span class="tok-keyword">As</span> <span class="tok-keyword">Char</span> = <span class="tok-comment">'t'</span></div><div class="cm-line">        <span class="tok-keyword">Dim</span> <span class="tok-variableName">a</span> <span class="tok-keyword">As</span> <span class="tok-variableName">Action</span> = <span class="tok-keyword">Sub</span>()</div><div class="cm-line">                          <span class="tok-keyword">End</span> <span class="tok-keyword">Sub</span></div><div class="cm-line">    <span class="tok-keyword">End</span> <span class="tok-keyword">Sub</span></div><div class="cm-line"><span class="tok-keyword">End</span> <span class="tok-keyword">Class</span></div>"`;
